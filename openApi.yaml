openapi: 3.0.0
info:
  title: GoTravel API
  version: 0.0.1
servers:
  - description: Production Server
    url: https://gotravel-ilms4lrona-as.a.run.app/
  - description: Development Server
    url: https://final-project-be-develop.up.railway.app/

tags:
  - name: Login
    description: Contain every operation about Login Resource
  - name: User
    description: Contain every operation about User Resource
  - name: Admin
    description: Contain every operation about Admin Resource
  - name: Airport
    description: Contain every operation about Airport Resource
  - name: Plane
    description: Contain every operation about Plane Resource
  - name: Flight
    description: Contain every operation about Flight Resource
  - name: Booking
    description: Contain every operation about Booking Resource
  - name: Whislist
    description: Contain every operation about Whislist Resource
  - name: Notification
    description: Contain every operation about Notification Resource
  - name: Confirmation
    description: Contain every operation about Confirmation Resource

paths:
 
  #---Airport Operation---#

  /api/v1/airport:
    get:
      summary: Get all Airport
      operationId: Get all Airport
      description: "Get new Airport data from database"
      tags:
        - Airport
      responses:
        "200":
          $ref: "#/components/responses/GetAirportResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"

    post:
      security:
        - bearerAuth: []
      operationId: createAirport
      summary: Create Data Airport
      description: "Add new Airport data to database \n\n Allowed roles: superadmin, admin"
      tags:
        - Airport
      requestBody:
        $ref: "#/components/requestBodies/AirportRequest"
      responses:
        "200":
          $ref: "#/components/responses/PostAirportResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

  /api/v1/airport/{id}:
    get:
      summary: Get Airport By ID
      operationId: Get Airport By Id
      description: "Get new Airport data from database"
      tags:
        - Airport
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/GetAirportById"
        "400":
          $ref: "#/components/responses/ErrorResponse"
  
    put:
      security:
        - bearerAuth: []
      summary: Update Airport By Id
      operationId: UpdateAirport
      description: "Update Airport data to database \n\n Allowed roles: superadmin, admin"
      tags:
        - Airport
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      requestBody:
        $ref: "#/components/requestBodies/AirportUpdate"
      responses:
        "200":
          $ref: "#/components/responses/PutAirportResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

    delete:
      security:
        - bearerAuth: []
      summary: Delete Airport By Id
      operationId: DeleteAirport
      description: "Delete Airport data from database \n\n Allowed roles: superadmin, admin"
      tags:
        - Airport
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/DeleteAirportResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

  #---Plane Operation---#
  
  /api/v1/plane:
    get:
      summary: Get all Plane
      operationId: Get all Plane
      description: "Get Plane data from database"
      tags:
        - Plane
      responses:
        "200":
          $ref: "#/components/responses/GetPlaneResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"

    post:
      security:
        - bearerAuth: []
      operationId: createPlane
      summary: Create Data Plane
      description: "Add new Plane data to database \n\n Allowed roles: superadmin, admin"
      tags:
        - Plane
      requestBody:
        $ref: "#/components/requestBodies/PlaneRequest"
      responses:
        "200":
          $ref: "#/components/responses/PostPlaneResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
  
  /api/v1/plane/{id}:
    get:
      summary: Get Plane By ID
      operationId: Get Plane By Id
      description: "Get Plane data from database"
      tags:
        - Plane
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/GetPlaneById"
        "400":
          $ref: "#/components/responses/ErrorResponse"
  
    put:
      security:
        - bearerAuth: []
      summary: Update Plane By Id
      operationId: UpdatePlane
      description: "Update Plane data from database \n\n Allowed roles: superadmin, admin"
      tags:
        - Plane
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      requestBody:
        $ref: "#/components/requestBodies/PlaneUpdate"
      responses:
        "200":
          $ref: "#/components/responses/PutPlaneResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
  
    delete:
      security:
        - bearerAuth: []
      summary: Delete Plane By Id
      operationId: DeletePlane
      description: "Delete Plane data from database \n\n Allowed roles: superadmin, admin"
      tags:
        - Plane
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/DeletePlaneResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

  #---Flight Operation---#

  /api/v1/flight:
    get:
      summary: Get all Flight
      operationId: Get all Flight
      description: "Get Flight data from database"
      tags:
        - Flight
      responses:
        "200":
          $ref: "#/components/responses/GetFlightResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
    
    post:
      security:
        - bearerAuth: []
      operationId: createFlight
      summary: Create Data Flight
      description: "Add new Flight data to database \n\n Allowed roles: superadmin, admin"
      tags:
        - Flight
      requestBody:
        $ref: "#/components/requestBodies/FlightRequest"
      responses:
        "200":
          $ref: "#/components/responses/PostFlightResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

  /api/v1/flight/{id}:
    get:
      summary: Get Flight By ID
      operationId: Get Flight By Id
      description: "Get Flight data from database"
      tags:
        - Flight
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/GetFlightById"
        "400":
          $ref: "#/components/responses/ErrorResponse"
    
    put:
      security:
        - bearerAuth: []
      summary: Update Flight By Id
      operationId: UpdateFlight
      description: "Update Flight data from database \n\n Allowed roles: superadmin, admin"
      tags:
        - Flight
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      requestBody:
        $ref: "#/components/requestBodies/FlightUpdate"
      responses:
        "200":
          $ref: "#/components/responses/PutFlightResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

    delete:
      security:
        - bearerAuth: []
      summary: Delete Flight By Id
      operationId: DeleteFlight
      description: "Delete Flight data from database \n\n Allowed roles: superadmin, admin"
      tags:
        - Flight
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/DeleteFlightResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

  #---Booking Operation---#

  /api/v1/booking:
    get:
      summary: Get all Booking
      operationId: Get all Booking
      description: "Get Booking data from database"
      tags:
        - Booking
      responses:
        "200":
          $ref: "#/components/responses/GetBookingResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
    
    post:
      security:
        - bearerAuth: []
      operationId: createBooking
      summary: Create Data Booking
      description: "Add new Booking data to database \n\n Allowed roles: superadmin, admin"
      tags:
        - Booking
      requestBody:
        $ref: "#/components/requestBodies/BookingRequest"
      responses:
        "200":
          $ref: "#/components/responses/PostBookingResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

  /api/v1/booking/{id}:
    get:
      summary: Get Booking By ID
      operationId: Get Booking By Id
      description: "Get Booking data from database"
      tags:
        - Booking
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/GetBookingById"
        "400":
          $ref: "#/components/responses/ErrorResponse"
    
    put:
      security:
        - bearerAuth: []
      summary: Update Booking By Id
      operationId: UpdateBooking
      description: "Update Booking data from database \n\n Allowed roles: superadmin, admin"
      tags:
        - Booking
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      requestBody:
        $ref: "#/components/requestBodies/BookingUpdate"
      responses:
        "200":
          $ref: "#/components/responses/PutBookingResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

    delete:
      security:
        - bearerAuth: []
      summary: Delete Booking By Id
      operationId: DeleteBooking
      description: "Delete Booking data from database \n\n Allowed roles: superadmin, admin"
      tags:
        - Booking
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/DeleteBookingResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

  #---Whislist Operation---#
  /api/v1/whislist:
    get:
      summary: Get all Whislist
      operationId: Get all Whislist
      description: "Get Whislist data from database"
      tags:
        - Whislist
      responses:
        "200":
          $ref: "#/components/responses/GetWhislistResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
    
    post:
      security:
        - bearerAuth: []
      operationId: createWhislist
      summary: Create Data Whislist
      description: "Add new Whislist data to database \n\n Allowed roles: superadmin, admin"
      tags:
        - Whislist
      requestBody:
        $ref: "#/components/requestBodies/WhislistRequest"
      responses:
        "200":
          $ref: "#/components/responses/PostWhislistResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
  
  /api/v1/whislist/:id:
    get:
      summary: Get Whislist By ID
      operationId: Get Whislist By Id
      description: "Get Whislist data from database"
      tags:
        - Whislist
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/GetWhislistById"
        "400":
          $ref: "#/components/responses/ErrorResponse"
    
    put:
      security:
        - bearerAuth: []
      summary: Update Whislist By Id
      operationId: UpdateWhislist
      description: "Update Whislist data from database \n\n Allowed roles: superadmin, admin"
      tags:
        - Whislist
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      requestBody:
        $ref: "#/components/requestBodies/WhislistUpdate"
      responses:
        "200":
          $ref: "#/components/responses/PutWhistlistResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
    
    delete:
      security:
        - bearerAuth: []
      summary: Delete Whislist By Id
      operationId: DeleteWhislist
      description: "Delete Whislist data from database \n\n Allowed roles: superadmin, admin"
      tags:
        - Whislist
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/DeleteWhislistResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

  #---Notification Operation---#
  /api/v1/notification:
    get:
     summary: Get all Notification
     operationId: Get all Notification
     description: "Get Notification data from database"
     tags:
       - Notification
     responses:
       "200":
         $ref: "#/components/responses/GetNotificationResponse"
       "400":
         $ref: "#/components/responses/ErrorResponse"
    
    post:
      security:
        - bearerAuth: []
      operationId: createNotification
      summary: Create Data Notification
      description: "Add new Notification data to database \n\n Allowed roles: superadmin, admin"
      tags:
        - Notification
      requestBody:
        $ref: "#/components/requestBodies/NotificationRequest"
      responses:
        "200":
          $ref: "#/components/responses/PostNotificationResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

  /api/v1/notification/:id:
    get:
      summary: Get Notification By ID
      operationId: Get Notification By Id
      description: "Get Notification data from database"
      tags:
        - Notification
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/GetNotificationById"
        "400":
          $ref: "#/components/responses/ErrorResponse"
    
    put:
      security:
        - bearerAuth: []
      summary: Update Notification By Id
      operationId: UpdateNotification
      description: "Update Notification data from database \n\n Allowed roles: superadmin, admin"
      tags:
        - Notification
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      requestBody:
        $ref: "#/components/requestBodies/NotificationUpdate"
      responses:
        "200":
          $ref: "#/components/responses/PutNotificationResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
    
    delete:
      security:
        - bearerAuth: []
      summary: Delete Notification By Id
      operationId: DeleteNotification
      description: "Delete Notification data from database \n\n Allowed roles: superadmin, admin"
      tags:
        - Notification
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/DeleteNotificationResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
  

  #---Confirmation Operation---#
  /api/v1/confirmation/:id:
    put:
      summary: Get Confirmation By ID
      operationId: Get Confirmation By Id
      description: "Get Confirmation data from database"
      tags:
        - Confirmation
      consumes:
         - multipart/form-data
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
        - in: formData
          name: file
          type: file
          description: The file to upload (PNG, JPG, JPEG, PDF).
      responses:
        "200":
          $ref: "#/components/responses/PutConfirmation"
        "400":
          $ref: "#/components/responses/ErrorResponse"

  #---Login User Operation---#

  /api/v1/login:
    post:
      tags:
        - Login
      summary: Login
      description: Login
      operationId: Login
      requestBody:
        $ref: "#/components/requestBodies/UserLoginRequest"
      responses:
        "200":
          $ref: "#/components/responses/LoginUserResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "403":
          $ref: "#/components/responses/UnprocessableRespon"

  #---User Operation---#
  /api/v1/profile:
    get:
      summary: Get Profile credential after user login
      description: "Get Profile user data from database"
      tags:
        - User
      summary: Register new User
      description: Register new account
      requestBody:
        $ref: "#/components/requestBodies/UserPostRequest"
      responses:
        "200":
          $ref: "#/components/responses/GetUserResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"

  /api/v1/register:
    post:
      tags:
        - User
      summary: Register new User
      description: Register new account
      requestBody:
        $ref: "#/components/requestBodies/UserPostRequest"
      responses:
        "200":
          $ref: "#/components/responses/PostUserResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "403":
          $ref: "#/components/responses/UnprocessableRespon"

  /api/v1/updateUser:
    put:
      summary: Update User By Login
      tags:
        - User
      description: Update user
      requestBody:
        $ref: "#/components/requestBodies/UserPutRequest"
      responses:
        "200":
          $ref: "#/components/responses/PutUserResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"

  /api/v1/updateProfileUser:
    put:
      summary: Update User profile picture By Login
      tags:
        - User
      description: Update user profile picture
      consumes:
         - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: The file to upload (PNG, JPG, JPEG).
      responses:
        "200":
          $ref: "#/components/responses/PutUserProfileResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"

  /api/v1/deleteUser/:id:
    delete:
      security:
        - bearerAuth: []
      summary: Delete User role member By Id
      operationId: DeleteUser
      description: "Delete User role member data from database \n\n Allowed roles: member"
      tags:
        - User
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/DeleteUserResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

  #---Admin Operation---#

  /api/v1/user:
    get:
      summary: Get all User
      operationId: Get all User
      description: "Get all user data from database"
      tags:
        - Admin
      responses:
        "200":
          $ref: "#/components/responses/GetAllUserResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"

  /api/v1/Admin:
    get:
      summary: Get admin
      operationId: Get admin
      description: "Get admin data from database"
      tags:
        - Admin
      responses:
        "200":
          $ref: "#/components/responses/GetAdminResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"

  /api/v1/Member:
    get:
      summary: Get Member
      operationId: Get Member
      description: "Get member data from database"
      tags:
        - Admin
      responses:
        "200":
          $ref: "#/components/responses/GetMemberResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"

  /api/v1/createAdmin:
    post:
      tags:
        - Admin
      summary: Register new admin
      description: Register new account
      requestBody:
        $ref: "#/components/requestBodies/CreateAdminPostRequest"
      responses:
        "200":
          $ref: "#/components/responses/PostAdminResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "403":
          $ref: "#/components/responses/UnprocessableRespon"

  #---Admin and SuperAdmin---#

components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
      
  requestBodies:

    #---Airport RequestBodies---#

    AirportRequest:
      description: Create Airport Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: Bandara Udara Internasional Soekarno–Hatta
              province:
                type: string
                example: Banten
              city:
                type: string
                example: Tangerang
              country:
                type: string
                example: Indonesia
              status:
                type: string
                example: Indonesia

    AirportUpdate:
      description: Update Airport Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: Bandara Udara Internasional Soekarno–Hatta
              province:
                type: string
                example: Banten
              city:
                type: string
                example: Tangerang
              country:
                type: string
                example: Indonesia
              status:
                type: string
                example: Indonesia

    #---Plane RequestBodies---#   

    PlaneRequest:
      description: Create Plane Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 100
              name:
                type: string
                example: Boeing 777-300ER
              status:
                type: string
                example: "On"

    PlaneUpdate:
      description: Update Plane Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 100
              name:
                type: string
                example: Boeing 777-300ER
              status:
                type: string
                example: "On"
    
    #---Flight RequestBodies---#

    FlightRequest:
      description: Create Airport Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 1
              id_plane:
                type: integer
                example: 2
              from_airport_id:
                type: integer
                example: 1
              to_airport_id:
                type: integer
                example: 3
              kelas:
                type: string
                example: Economy Class
              available_seats:
                type: integer
                example: 100
              price:
                type: integer
                example: 120000 
              arrival_time:
                type: string
                example: "14:00"
              departure_time:
                type: string
                example: "13:00"
              flight_date:
                type: string
                example: "2022-12-18"
    
    FlightUpdate:
      description: Update Flight Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              from_airport_id:
                type: integer
                example: 1
              to_airport_id:
                type: integer
                example: 3
              id_plane:
                type: integer
                example: 2
              kelas:
                type: string
                example: Economy Class
              available_seats:
                type: integer
                example: 100
              price:
                type: integer
                example: 120000 
              arrival_time:
                type: string
                example: "14:00"
              departure_time:
                type: string
                example: "13:00"
              flight_date:
                type: string
                example: "2022-12-18"

    #---Booking RequestBodies---#

    BookingRequest:
      description: Create Booking Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id_flight:
                type: integer
                example: 1
              id_user:
                type: integer
                example: 1
              food:
                type: boolean
                example: true
              baggage:
                type: integer
                example: 20
              name:
                type: string
                example: Bukan Orang
              homephone:
                type: string
                example: 08123456
              mobilephone:
                type: integer
                example: 08123456
              totalprice:
                type: integer
                example: 2000000
              booking_date:
                type: string
                example: "2022-12-12"
              trip_type:
                type: string
                example: "Round Trip"
              
    BookingUpdate:
      description: Update Booking Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id_flight:
                type: integer
                example: 1
              id_user:
                type: integer
                example: 1
              baggage:
                type: integer
                example: 20
              food:
                type: boolean
                example: true
              name:
                type: string
                example: Ini Orang
              homephone:
                type: string
                example: 08123456
              mobilephone:
                type: integer
                example: 08123456
              totalprice:
                type: integer
                example: 2000000
              booking_date:
                type: string
                example: "2022-12-10"
              confirmation:
                type: string
                example: "http://res.cloudinary.com/dps0jpnk2/image/upload/v1671889795/backend-files/bi9s017phjfxzytpngnp.jpg"
              approved:
                type: boolean
                example: false
              trip_type:
                type: string
                example: Round Trip

    #---Whislist RequestBodies#
    WhislistRequest:
      description: Create Whislist Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id_user:
                type: integer
                example: 3
              id_flight:
                type: integer
                example: 1
    
    WhislistUpdate:
      description: Update Whislist Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id_user:
                type: integer
                example: 1
              id_flight:
                type: integer
                example: 1

    #--- Notification RequestBodies ---#

    NotificationRequest:
      description: Create Notification Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Flight berhasil ditambahkan
              id_user:
                type: integer
                example: 1
    
    NotificationUpdate:
      description: Update Whislist Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Flight berhasil ditambahkan ke dalam whislist
              id_user:
                type: integer
                example: 1
    
    #---Confirmation request---#
    ConfirmationRequest:
      description: Create Confirmation Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Created

    #---User RequestBodies---#
    UserPostRequest:
      description: Create User Data Required fields [gender, date_of_birth, address, email, password, name, username]
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              no_ktp:
                type: string
                example: ""
              gender:
                type: string
                example: L
              date_of_birth:
                type: string
                example: "4022-12-12"
              address:
                type: string
                example: JL.abcde
              email:
                type: string
                example: abdul@email.com
              password:
                type: string
                example: abdul
              name:
                type: string
                example: abdul ok
              username:
                type: string
                example: abdul
              image:
                type: string
                example: ""
              role:
                type: string
                example: "member"

    UserLoginRequest:
      description: Create Admin Data Required fields [email or username, password]
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: "abdul@mail.com"
              password:
                type: string
                example: "abdul"

    UserPutRequest:
      description: Create User Data Required fields [gender, date_of_birth, address, email, password, name, username]
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              no_ktp:
                type: string
                example: ""
              gender:
                type: string
                example: L
              date_of_birth:
                type: string
                example: "4022-12-12"
              address:
                type: string
                example: JL.abcde
              email:
                type: string
                example: abdul@email.com
              password:
                type: string
                example: abdul
              name:
                type: string
                example: abdul ok
              username:
                type: string
                example: abdul
              image:
                type: string
                example: ""
              role:
                type: string
                example: "member"

    #---Admin and SuperAdmin RequestBodies---#
   
    CreateAdminPostRequest:
      description: Create Admin Data Required fields [no_ktp, gender, date_of_birth, address, email, password, name, username, role]
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              no_ktp:
                type: string
                example: "12345678"
              gender:
                type: string
                example: L
              date_of_birth:
                type: string
                example: "2022-12-01"
              address:
                type: string
                example: Jalan Suroyo No. 161 Mayangan Kota Probolonggo Indonesia
              email:
                type: string
                example: admin@mail.com
              password:
                type: string
                example: admin
              name:
                type: string
                example: saya admin
              username:
                type: string
                example: admin
              image:
                type: string
                example: ""
              role:
                type: string
                example: admin

  responses:

    #---Airport Response---#

    GetAirportResponse:
      description: Get data Airport success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                type: object
                properties:
                  airports:
                    $ref: "#/components/schemas/AirportGet"
              properties:
              meta:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1

    GetAirportById:
      description: Get data airport success with id = id
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                $ref: "#/components/schemas/AirportGetByID"

    PostAirportResponse:
      description: create data airport succes
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Create Airport successfully

    PutAirportResponse:
      description: Update data airport success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Update Airport successfully

    DeleteAirportResponse:
      description: Delete data plane success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Delete Airport successfully
    
    #---Plane Response---#

    GetPlaneResponse:
      description: Get data plane success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                type: object
                properties:
                  planes:
                    $ref: "#/components/schemas/PlaneGet"
              properties:
              meta:
                type: object
                properties:
                  total:
                    type: integer
                    example: 1
    
    PostPlaneResponse:
      description: create data plane success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Create Plane successfully
              data:
                type: object
                properties:
                  planes:
                    $ref: "#/components/schemas/PlanePost"
    
    GetPlaneById:
      description: Get data plane success with id = id
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                $ref: "#/components/schemas/PlaneGetByID"

    PutPlaneResponse:
      description: Update data plane success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Update plane successfully
    
    DeletePlaneResponse:
      description: Delete data plane success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Delete Plane successfully
    
    #---Flight Operation---#

    GetFlightResponse:
      description: Get data flight success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                type: object
                properties:
                  flights:
                    $ref: "#/components/schemas/FlightGet"
              properties:
              meta:
                type: object
                properties:
                  total:
                    type: integer
                    example: 1
    
    PostFlightResponse:
      description: create data flight succes
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Create Flight successfully
    
    GetFlightById:
      description: Get data Flight success with id = id
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                $ref: "#/components/schemas/FlightGetByID"

    PutFlightResponse:
      description: Update data flight success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Update Flight successfully
    
    DeleteFlightResponse:
      description: Delete data flight success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Delete Flight successfully

    #---Booking Operation---#

    GetBookingResponse:
      description: Get data Booking success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                type: object
                properties:
                  booking:
                    $ref: "#/components/schemas/BookingGet"
              properties:
              meta:
                type: object
                properties:
                  total:
                    type: integer
                    example: 1

    PostBookingResponse:
      description: create data Booking succes
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Create Booking successfully
              data:
                type: object
                properties:
                  id_flight:
                    type: integer
                    example: 1
                  id_user:
                    type: integer
                    example: 1
                  baggage:
                    type: integer
                    example: 20
                  food:
                    type: boolean
                    example: true
                  name:
                    type: string
                    example: Bukan Orang
                  homephone:
                    type: string
                    example: 08123456
                  mobilephone:
                    type: integer
                    example: 08123456
                  totalprice:
                    type: integer
                    example: 2000000
                  booking_date:
                    type: string
                    example: "2022-12-12"
                  confirmation:
                    type: string
                    example: ""
                  approved:
                    type: boolean
                    example: false
                  trip_type:
                    type: string
                    example: Round Trip
                  updatedAt:
                    type: string
                    example: "2022-12-08T13:30:39.034Z"
                  createdAt:
                    type: string
                    example: "2022-12-08T13:30:39.034Z"

    GetBookingById:
      description: Get data Booking success with id = id
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                $ref: "#/components/schemas/BookingGetByID"
    
    PutBookingResponse:
      description: Update data Booking success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Update Booking successfully
    
    DeleteBookingResponse:
      description: Delete data Booking success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Delete Booking successfully

    #---Whislist Response---#

    GetWhislistResponse:
      description: Get data whislist success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                type: object
                properties:
                  whislists:
                    $ref: "#/components/schemas/WhislistGet"
              properties:
              meta:
                type: object
                properties:
                  total:
                    type: integer
                    example: 1
    
    PostWhislistResponse:
      description: create data Whislist succes
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Create whislist successfully
              data:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  id_flight:
                    type: integer
                    example: 1
                  updatedAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  createdAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
    
    GetWhislistById:
      description: Get data Whislist success with id = id
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                $ref: "#/components/schemas/WhislistGetByID"
    
    PutWhistlistResponse:
      description: Update data Whislist success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Update Whislist successfully
    
    DeleteWhislistResponse:
      description: Delete data Whislist success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Delete Whislist successfully

    #---Notification Response---#
    GetNotificationResponse:
      description: Get data Notification success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                type: object
                properties:
                  notifications:
                    $ref: "#/components/schemas/NotificationGet"
              properties:
              meta:
                type: object
                properties:
                  total:
                    type: integer
                    example: 1

    PostNotificationResponse:
      description: create data Notification success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Create notification successfully
              data:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  message:
                    type: string
                    example: Flight berhasil ditambahkan
                  id_user:
                    type: integer
                    example: 2
                  updatedAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  createdAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
    
    GetNotificationById:
      description: Get data Notification success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                type: object
                properties:
                $ref: "#/components/schemas/NotificationGet"
    
    PutNotificationResponse:
      description: Update data Notification success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Update Notification successfully
    
    DeleteNotificationResponse:
      description: Delete data Notification success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Delete Notification successfully

    #---Confirmation Response---#
    
    PutConfirmation:
      description: Update data Confirmation success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: updated

    #---User Response---#

    GetUserResponse:
      description: Get data Profile success
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 1
              no_ktp:
                type: string
                example: ""
              gender:
                type: string
                example: L
              date_of_birth:
                type: string
                example: "2022-12-01"
              address:
                type: string
                example: ""
              email:
                type: string
                example: "badu@mail.com"
              password:
                type: string
                example: "$2a$10$wSSZliEv0WX7l17UmE4zMeyYluacWP0W0pk85zcnto0/GqR3ioYA."
              name:
                type: string
                example: "badu oke"
              username:
                type: string
                example: "badu"
              image:
                type: string
                example: ""
              createdAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              updatedAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
    
    PostUserResponse:
      description: Created User
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 1
              email:
                type: string
                example: abdul@email.com
              createdAt:
                type: string
                example: "2022-12-10T06:38:13.614Z"
              updatedAt:
                type: string
                example: "2022-12-10T06:38:13.614Z"

    LoginUserResponse:
      description: Login User
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 1
              email:
                type: string
                example: abdul@email.com
              username:
                type: string
                example: abdul
              token:
                type: string
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiZW1haWwiOiJhYmR1bEBtYWlsLmNvbSIsImNyZWF0ZWRBdCI6IjIwMjItMTItMTBUMDY6Mzg6MTMuNjE0WiIsInVwZGF0ZWRBdCI6IjIwMjItMTItMTBUMDY6Mzg6MTMuNjE0WiIsImlhdCI6MTY3MDY1NDMyOX0.Cj8N4f4kThOAIJy4vPc68h-CSzdA3aM8tln3NU6KjP4"
              createdAt:
                type: string
                example: "2022-12-10T06:38:13.614Z"
              updatedAt:
                type: string
                example: "2022-12-10T06:38:13.614Z"
      
    PutUserResponse:
      description: Update data User success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Update User profile successfully

    PutUserProfileResponse:
      description: Update data User success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Update User profile picture successfully  
  
    DeleteUserResponse:
      description: Delete data User success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Delete User successfully

    #---Error Response---#

    ErrorResponse:
      description: Error Response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Error

    #---Unauthorized Response---#

    UnauthorizedResponse:
      description: Response when accessing or input data without using admin or superadmin account 
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Unauthorized"

    #---Forbidden Response---#

    ForbiddenResponse:
      description: Response when accessing protected endpoint with access but sufficient access
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: FAIL
              message:
                type: string
                example: "you don't have permission"

    #---Register Response---#
    
    UserResponse:
      description: Created Admin
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              data:
                type: object
                properties:
                  name:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "create Admin successfully"

    #---Admin Response---#

    GetAllUserResponse:
      description: Get data all user success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/UserGet"
              properties:
              meta:
                type: object
                properties:
                  total:
                    type: integer
                    example: 3
    
    GetAdminResponse:
      description: Get data admin success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/AdminGet"
              properties:
              meta:
                type: object
                properties:
                  total:
                    type: integer
                    example: 1

    GetMemberResponse:
      description: Get data member success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/MemberGet"
              properties:
              meta:
                type: object
                properties:
                  total:
                    type: integer
                    example: 1
    
    PostAdminResponse:
      description: Created Admin
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 1
              email:
                type: string
                example: admin@mail.com
              createdAt:
                type: string
                example: "2022-12-10T06:38:13.614Z"
              updatedAt:
                type: string
                example: "2022-12-10T06:38:13.614Z"

    #---Login Response---#

    LoginResponse:
      description: Login
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              data:
                type: object
                properties:
                  name:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "login successfully"

    #---Unprocessable Response---#

    UnprocessableRespon:
      description: Unprocessable Entity, check missing fields from requestBody
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: FAILED
              data:
                type: object
                properties:
                  name:
                    type: string
                    example: "failed"
                  message:
                    type: string
                    example: "check missing fields from requestBody"

    #---WhoAmI Response---#

  schemas:

    #---Airport Schemas---#

    AirportGet:
      type: array
      items:
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Bandara Udara Internasional Soekarno–Hatta
          province:
            type: string
            example: Banten
          city:
            type: string
            example: Tangerang
          country:
            type: string
            example: Indonesia
          status:
            type: string
            example: "On"
          createdAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
          updatedAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
    
    AirportGetByID:
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Bandara Udara Internasional Soekarno–Hatta
        province:
          type: string
          example: Banten
        city:
          type: string
          example: Tangerang
        country:
          type: string
          example: Indonesia
        status:
          type: string
          example: "On"
        createdAt:
          type: string
          example: "2022-12-05T16:32:34.011Z"
        updatedAt:
          type: string
          example: "2022-12-05T16:32:34.011Z"
    
    AirportPost:
      type: object
      items:
        properties:
          name:
            type: string
            example: Bandara Udara Internasional Soekarno–Hatta
          province:
            type: string
            example: Banten
          city:
            type: string
            example: Tangerang
          country:
            type: string
            example: Indonesia
          status:
            type: string
            example: "On"

    #---Plane Schemas---#

    PlaneGet:
      type: array
      items:
        properties:
          id:
            type: integer
            example: 1
          code:
            type: integer
            example: 100
          name:
            type: string
            example: Boeing 777-300ER
          status:
            type: string
            example: "On"
          createdAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
          updatedAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"

    PlanePost:
      properties:
        id:
          type: integer
          example: 1
        code:
          type: integer
          example: 100
        name:
          type: string
          example: Boeing 777-300ER
        status:
          type: string
          example: "On"
        createdAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
        updatedAt:
          type: string
          example: "2022-12-05T16:32:34.011Z"
    
    PlaneGetByID:
      properties:
        id:
          type: integer
          example: 1
        code:
          type: integer
          example: 100
        name:
          type: string
          example: Boeing 777-300ER
        status:
          type: string
          example: "On"
        createdAt:
          type: string
          example: "2022-12-05T16:32:34.011Z"
        updatedAt:
          type: string
          example: "2022-12-05T16:32:34.011Z"

    #---Flight Schemas---#

    FlightGet:
      type: array
      items:
        properties:
          id:
            type: integer
            example: 1
          id_plane:
            type: integer
            example: 2
          from_airport_id:
            type: integer
            example: 1
          to_airport_id:
            type: integer
            example: 3
          kelas:
            type: string
            example: Economy Class
          available_seats:
            type: integer
            example: 100
          price:
            type: integer
            example: 120000 
          arrival_time:
            type: string
            example: "14:00"
          departure_time:
            type: string
            example: "13:00"
          flight_date:
            type: string
            example: "2022-12-18"
          createdAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
          updatedAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
          plane:
            type: object
            properties:
              id:
                type: integer
                example: 2
              code:
                type: integer
                example: 101
              name:
                type: string
                example: Boeing 777-300ER
              status:
                type: string
                example: "On"
              createdAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              updatedAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
          FromAirpot:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: Bandara Udara Internasional Soekarno–Hatta
              status:
                type: string
                example: "On"
              createdAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              updatedAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
          ToAirpot:
            type: object
            properties:
              id:
                type: integer
                example: 3
              name:
                type: string
                example: Bandara Udara Internasional Juanda
              province:
                type: string
                example: Jawa Timur
              city:
                type: string
                example: Sidoarjo
              country:
                type: string
                example: Indonesia
              status:
                type: string
                example: "On"
              createdAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              updatedAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
          Bookings:
            type: object
            properties:

    FlightGetByID:
      properties:
        id:
          type: integer
          example: 1
        id_plane:
          type: integer
          example: 2
        from_airport_id:
          type: integer
          example: 1
        to_airport_id:
          type: integer
          example: 3
        kelas:
          type: string
          example: Economy Class
        available_seats:
          type: integer
          example: 100
        price:
          type: integer
          example: 120000 
        arrival_time:
          type: string
          example: "14:00"
        departure_time:
          type: string
          example: "13:00"
        flight_date:
          type: string
          example: "2022-12-18"
        createdAt:
          type: string
          example: "2022-12-05T16:32:34.011Z"
        updatedAt:
          type: string
          example: "2022-12-05T16:32:34.011Z"

    #---Booking Schemas---#

    BookingGet:
      type: array
      items:
        properties:
          id:
            type: integer
            example: 1
          id_flight:
            type: integer
            example: 1
          id_user:
            type: integer
            example: 2
          baggage:
            type: integer
            example: 20
          food:
            type: boolean
            example: true
          name:
            type: string
            example: Bukan Orang
          homephone:
            type: string
            example: 08123456
          mobilephone:
            type: string
            example: 08123456
          totalprice:
            type: integer
            example: 2000000
          booking_date:
            type: string
            example: "2022-12-12"
          confirmation:
            type: string
            example: "http://res.cloudinary.com/dps0jpnk2/image/upload/v1671889795/backend-files/bi9s017phjfxzytpngnp.jpg"
          approved:
            type: boolean
            example: false
          trip_type:
            type: string
            example: Round Trip
          createdAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
          updatedAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
          Flight:
            type: object
            properties:
              id:
                type: integer
                example: 1
              id_plane:
                type: integer
                example: 2
              from_airport_id:
                type: integer
                example: 1
              to_airport_id:
                type: integer
                example: 3
              kelas:
                type: string
                example: Economy Class
              available_seats:
                type: integer
                example: 100
              price:
                type: integer
                example: 120000 
              arrival_time:
                type: string
                example: "14:00"
              departure_time:
                type: string
                example: "13:00"
              flight_date:
                type: string
                example: "2022-12-18"
              createdAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              updatedAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              Plane:
                type: object
                properties:
                  id:
                    type: integer
                    example: 2
                  id_plane:
                    type: integer
                    example: 2
                  from_airport_id:
                    type: integer
                    example: 1
                  to_airport_id:
                    type: integer
                    example: 3
                  kelas:
                    type: string
                    example: Economy Class
                  available_seats:
                    type: integer
                    example: 100
                  price:
                    type: integer
                    example: 120000 
                  arrival_time:
                    type: string
                    example: "14:00"
                  departure_time:
                    type: string
                    example: "13:00"
                  flight_date:
                    type: string
                    example: "2022-12-18"
                  createdAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  updatedAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
              FromAirpot:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Bandara Udara Internasional Soekarno–Hatta
                  status:
                    type: string
                    example: "On"
                  createdAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  updatedAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
              ToAirpot:
                type: object
                properties:
                  id:
                    type: integer
                    example: 3
                  name:
                    type: string
                    example: Bandara Udara Internasional Juanda
                  province:
                    type: string
                    example: Jawa Timur
                  city:
                    type: string
                    example: Sidoarjo
                  country:
                    type: string
                    example: Indonesia
                  status:
                    type: string
                    example: "On"
                  createdAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  updatedAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"  
          User:
            type: object
            properties:
              id:
                type: integer
                example: 2
              no_ktp:
                type: string
                example: ""
              gender:
                type: string
                example: L
              date_of_birth:
                type: string
                example: "2022-12-01"
              address:
                type: string
                example: ""
              email:
                type: string
                example: "badu@mail.com"
              password:
                type: string
                example: "$2a$10$wSSZliEv0WX7l17UmE4zMeyYluacWP0W0pk85zcnto0/GqR3ioYA."
              name:
                type: string
                example: "badu oke"
              username:
                type: string
                example: "badu"
              image:
                type: string
                example: ""
              createdAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              updatedAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              Whislists:
                type: object
                properties:

    BookingGetByID:
      properties:
        id:
          type: integer
          example: 1
        id_flight:
          type: integer
          example: 1
        id_user:
          type: integer
          example: 2
        baggage:
          type: integer
          example: 20
        food:
          type: boolean
          example: true
        name:
          type: string
          example: Bukan Orang
        homephone:
          type: string
          example: 08123456
        mobilephone:
          type: string
          example: 08123456
        totalprice:
          type: integer
          example: 2000000
        booking_date:
          type: string
          example: "2022-12-12"
        confirmation:
          type: string
          example: "http://res.cloudinary.com/dps0jpnk2/image/upload/v1671889795/backend-files/bi9s017phjfxzytpngnp.jpg"
        approved:
          type: boolean
          example: false
        trip_type:
            type: string
            example: Round Trip
        createdAt:
          type: string
          example: "2022-12-05T16:32:34.011Z"
        updatedAt:
          type: string
          example: "2022-12-05T16:32:34.011Z"

    #---Whislist Schema---#
    WhislistGet:
      type: array
      items:
        properties:
          id:
            type: integer
            example: 1
          id_user:
            type: integer
            example: 2
          id_flight:
            type: integer
            example: 1
          createdAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
          updatedAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
          User:
            type: object
            properties:
              id:
                type: integer
                example: 2
              no_ktp:
                type: string
                example: "123456789"
              gender:
                type: string
                example: L
              date_of_birth:
                type: string
                example: "2022-12-01"
              address:
                type: string
                example: "Jalan Suroyo No. 161 Mayangan Kota Probolonggo Indonesia"
              email:
                type: string
                example: "user@mail.com"
              password:
                type: string
                example: "$2a$10$wSSZliEv0WX7l17UmE4zMeyYluacWP0W0pk85zcnto0/GqR3ioYA."
              name:
                type: string
                example: "User"
              username:
                type: string
                example: "user"
              image:
                type: string
                example: ""
              role:
                type: string
                example: "member"
              createdAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              updatedAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              Booking:
                type: object
                properties:
              Notification:
                type: object
                properties:
          Flight:
            type: object
            properties:
              id:
                type: integer
                example: 1
              id_plane:
                type: integer
                example: 2
              from_airport_id:
                type: integer
                example: 1
              to_airport_id:
                type: integer
                example: 3
              kelas:
                type: string
                example: Economy Class
              available_seats:
                type: integer
                example: 100
              price:
                type: integer
                example: 120000 
              arrival_time:
                type: string
                example: "14:00"
              departure_time:
                type: string
                example: "13:00"
              flight_date:
                type: string
                example: "2022-12-18" 
              createdAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              updatedAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              Plane:
                type: object
                properties:
                  id:
                    type: integer
                    example: 2
                  code:
                    type: integer
                    example: 101
                  name:
                    type: string
                    example: Boeing 777-300ER
                  status:
                    type: boolean
                    example: On 
                  createdAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  updatedAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
              FromAirpot:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Bandara Udara Internasional Soekarno–Hatta
                  province:
                    type: string
                    example: Banten
                  city:
                    type: string
                    example: Tangerang
                  country:
                    type: string
                    example: Indonesia
                  status:
                    type: string
                    example: "On"
                  createdAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  updatedAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
              ToAirpot:
                type: object
                properties:
                  id:
                    type: integer
                    example: 3
                  name:
                    type: string
                    example: Bandara Udara Internasional Juanda
                  province:
                    type: string
                    example: Jawa Timur
                  city:
                    type: string
                    example: Sidoarjo
                  country:
                    type: string
                    example: Indonesia
                  status:
                    type: string
                    example: "On"
                  createdAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  updatedAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z" 
              Bookings:
                type: object 
                properties:
                  id:
                    type: integer
                    example: 1
                  id_flight:
                    type: integer
                    example: 1
                  id_user:
                    type: integer
                    example: 1
                  baggage:
                    type: integer
                    example: 20
                  food:
                    type: string
                    example: true
                  name:
                    type: string
                    example: budi
                  homephone:
                    type: string
                    example: 073123456
                  mobilephone:
                    type: string
                    example: 073123456
                  totalprice:
                    type: string
                    example: 2000000
                  booking_date:
                    type: string
                    example: "2022-12-12"
                  confirmation:
                    type: string
                    example: "http://res.cloudinary.com/dps0jpnk2/image/upload/v1671889795/backend-files/bi9s017phjfxzytpngnp.jpg"
                  approved:
                    type: boolean
                    example: false
                  trip_type:
                    type: string
                    example: Round Trip
                  createdAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  updatedAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  User:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      no_ktp:
                        type: string
                        example: "123456789"
                      gender:
                        type: string
                        example: L
                      date_of_birth:
                        type: string
                        example: "2022-12-01"
                      address:
                        type: string
                        example: "Jalan Suroyo No. 161 Mayangan Kota Probolonggo Indonesia"
                      email:
                        type: string
                        example: "user@mail.com"
                      password:
                        type: string
                        example: "$2a$10$wSSZliEv0WX7l17UmE4zMeyYluacWP0W0pk85zcnto0/GqR3ioYA."
                      name:
                        type: string
                        example: "User"
                      username:
                        type: string
                        example: "user"
                      image:
                        type: string
                        example: ""
                      role:
                        type: string
                        example: "member"
                      createdAt:
                        type: string
                        example: "2022-12-05T16:32:34.011Z"
                      updatedAt:
                        type: string
                        example: "2022-12-05T16:32:34.011Z"
                      Notification:
                        type: object
                        properties: 
    
    WhislistGetByID:
      type: array
      items:
        properties:
          id:
            type: integer
            example: 1
          id_user:
            type: integer
            example: 2
          id_flight:
            type: integer
            example: 1
          createdAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
          updatedAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
          User:
            type: object
            properties:
              id:
                type: integer
                example: 2
              no_ktp:
                type: string
                example: "123456789"
              gender:
                type: string
                example: L
              date_of_birth:
                type: string
                example: "2022-12-01"
              address:
                type: string
                example: "Jalan Suroyo No. 161 Mayangan Kota Probolonggo Indonesia"
              email:
                type: string
                example: "user@mail.com"
              password:
                type: string
                example: "$2a$10$wSSZliEv0WX7l17UmE4zMeyYluacWP0W0pk85zcnto0/GqR3ioYA."
              name:
                type: string
                example: "User"
              username:
                type: string
                example: "user"
              image:
                type: string
                example: ""
              role:
                type: string
                example: "member"
              createdAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              updatedAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              Booking:
                type: object
                properties:
              Notification:
                type: object
                properties:
          Flight:
            type: object
            properties:
              id:
                type: integer
                example: 1
              id_plane:
                type: integer
                example: 2
              from_airport_id:
                type: integer
                example: 1
              to_airport_id:
                type: integer
                example: 3
              kelas:
                type: string
                example: Economy Class
              available_seats:
                type: integer
                example: 100
              price:
                type: integer
                example: 120000 
              arrival_time:
                type: string
                example: "14:00"
              departure_time:
                type: string
                example: "13:00"
              flight_date:
                type: string
                example: "2022-12-18"
              createdAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              updatedAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              Plane:
                type: object
                properties:
                  id:
                    type: integer
                    example: 2
                  code:
                    type: integer
                    example: 101
                  name:
                    type: string
                    example: Boeing 777-300ER
                  status:
                    type: boolean
                    example: On 
                  createdAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  updatedAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
              FromAirpot:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Bandara Udara Internasional Soekarno–Hatta
                  province:
                    type: string
                    example: Banten
                  city:
                    type: string
                    example: Tangerang
                  country:
                    type: string
                    example: Indonesia
                  status:
                    type: string
                    example: "On"
                  createdAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  updatedAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
              ToAirpot:
                type: object
                properties:
                  id:
                    type: integer
                    example: 3
                  name:
                    type: string
                    example: Bandara Udara Internasional Juanda
                  province:
                    type: string
                    example: Jawa Timur
                  city:
                    type: string
                    example: Sidoarjo
                  country:
                    type: string
                    example: Indonesia
                  status:
                    type: string
                    example: "On"
                  createdAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  updatedAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z" 
              Bookings:
                type: object 
                properties:
                  id:
                    type: integer
                    example: 1
                  id_flight:
                    type: integer
                    example: 1
                  id_user:
                    type: integer
                    example: 1
                  baggage:
                    type: integer
                    example: 20
                  food:
                    type: string
                    example: true
                  name:
                    type: string
                    example: budi
                  homephone:
                    type: string
                    example: 073123456
                  mobilephone:
                    type: string
                    example: 073123456
                  totalprice:
                    type: string
                    example: 2000000
                  booking_date:
                    type: string
                    example: "2022-12-12"
                  confirmation:
                    type: string
                    example: "http://res.cloudinary.com/dps0jpnk2/image/upload/v1671889795/backend-files/bi9s017phjfxzytpngnp.jpg"
                  approved:
                    type: boolean
                    example: false
                  trip_type:
                    type: string
                    example: Round Trip
                  createdAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  updatedAt:
                    type: string
                    example: "2022-12-05T16:32:34.011Z"
                  User:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      no_ktp:
                        type: string
                        example: "123456789"
                      gender:
                        type: string
                        example: L
                      date_of_birth:
                        type: string
                        example: "2022-12-01"
                      address:
                        type: string
                        example: "Jalan Suroyo No. 161 Mayangan Kota Probolonggo Indonesia"
                      email:
                        type: string
                        example: "user@mail.com"
                      password:
                        type: string
                        example: "$2a$10$wSSZliEv0WX7l17UmE4zMeyYluacWP0W0pk85zcnto0/GqR3ioYA."
                      name:
                        type: string
                        example: "User"
                      username:
                        type: string
                        example: "user"
                      image:
                        type: string
                        example: ""
                      role:
                        type: string
                        example: "member"
                      createdAt:
                        type: string
                        example: "2022-12-05T16:32:34.011Z"
                      updatedAt:
                        type: string
                        example: "2022-12-05T16:32:34.011Z"
                      Notification:
                        type: object
                        properties: 

    #--- Notification Schema ----#
    NotificationGet:
      type: array
      items:
        properties:
          id:
            type: integer
            example: 1
          message:
            type: string
            example: Flight berhasil ditambahkan
          id_user:
            type: integer
            example: 2
          updatedAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
          createdAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
          User:
            type: object
            properties:
              id:
                type: integer
                example: 2
              no_ktp:
                type: string
                example: "123456789"
              gender:
                type: string
                example: L
              date_of_birth:
                type: string
                example: "2022-12-01"
              address:
                type: string
                example: "Jalan Suroyo No. 161 Mayangan Kota Probolonggo Indonesia"
              email:
                type: string
                example: "user@mail.com"
              password:
                type: string
                example: "$2a$10$wSSZliEv0WX7l17UmE4zMeyYluacWP0W0pk85zcnto0/GqR3ioYA."
              name:
                type: string
                example: "User"
              username:
                type: string
                example: "user"
              image:
                type: string
                example: ""
              role:
                type: string
                example: "member"
              createdAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              updatedAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              Bookings:
                type: object 
                properties:
              Whislists:
                type: object 
                properties:
    
    #---Confirmation Schema---#

    #---User Schema---#

    #--Admin Schema---#
    UserGet:
      type: array
      items:
        properties:
          id:
            type: integer
          no_ktp:
            type: integer
          gender:
            type: string
          date_of_birth:
            type: string
          address:
            type: string
          email:
            type: string
          password:
            type: string
          name:
            type: string
          username:
            type: string
          image:
            type: string
          role:
            type: string
          createdAt:
            type: string
          updatedAt:
            type: string
        example:
          - id: 1
            no_ktp: 12345678
            gender: L
            date_of_birth: "2022-12-01"
            address: "Jalan Suroyo No. 161 Mayangan Kota Probolonggo Indonesia"
            email: "superadmin@gmail.com"
            password: "$2a$10$VHBTldj2eZ9qjIROb8HeCOvPhfsfeqhyu82p1UplJOYk9yhcusply"
            name: super admin
            username: superAdmin
            image: ""
            role: superAdmin
            createdAt: "2022-12-05T16:32:34.011Z"
            updatedAt: "2022-12-05T16:32:34.011Z"
          - id: 2
            no_ktp: 12345678
            gender: L
            date_of_birth: "2022-12-01"
            address: "Jalan Suroyo No. 161 Mayangan Kota Probolonggo Indonesia"
            email: "user@gmail.com"
            password: "$2a$10$VHBTldj2eZ9qjIROb8HeCOvPhfsfeqhyu82p1UplJOYk9yhcusply"
            name: User
            username: user
            image: ""
            role: member
            createdAt: "2022-12-05T16:32:34.011Z"
            updatedAt: "2022-12-05T16:32:34.011Z"
          - id: 3
            no_ktp: 12345678
            gender: L
            date_of_birth: "2022-12-01"
            address: "Jalan Suroyo No. 161 Mayangan Kota Probolonggo Indonesia"
            email: "admin@gmail.com"
            password: "$2a$10$VHBTldj2eZ9qjIROb8HeCOvPhfsfeqhyu82p1UplJOYk9yhcusply"
            name: Admin
            username: admin
            image: ""
            role: admin
            createdAt: "2022-12-05T16:32:34.011Z"
            updatedAt: "2022-12-05T16:32:34.011Z"

    AdminGet:
      type: array
      items:
        properties:
          id:
            type: integer
          no_ktp:
            type: integer
          gender:
            type: string
          date_of_birth:
            type: string
          address:
            type: string
          email:
            type: string
          password:
            type: string
          name:
            type: string
          username:
            type: string
          image:
            type: string
          role:
            type: string
          createdAt:
            type: string
          updatedAt:
            type: string
        example:
          - id: 1
            no_ktp: 12345678
            gender: L
            date_of_birth: "2022-12-01"
            address: "Jalan Suroyo No. 161 Mayangan Kota Probolonggo Indonesia"
            email: "admin@gmail.com"
            password: "$2a$10$VHBTldj2eZ9qjIROb8HeCOvPhfsfeqhyu82p1UplJOYk9yhcusply"
            name: Admin
            username: admin
            image: ""
            role: admin
            createdAt: "2022-12-05T16:32:34.011Z"
            updatedAt: "2022-12-05T16:32:34.011Z"
    
    MemberGet:
      type: array
      items:
        properties:
          id:
            type: integer
          no_ktp:
            type: integer
          gender:
            type: string
          date_of_birth:
            type: string
          address:
            type: string
          email:
            type: string
          password:
            type: string
          name:
            type: string
          username:
            type: string
          image:
            type: string
          role:
            type: string
          createdAt:
            type: string
          updatedAt:
            type: string
        example:
          - id: 1
            no_ktp: 12345678
            gender: L
            date_of_birth: "2022-12-01"
            address: "Jalan Suroyo No. 161 Mayangan Kota Probolonggo Indonesia"
            email: "user@gmail.com"
            password: "$2a$10$VHBTldj2eZ9qjIROb8HeCOvPhfsfeqhyu82p1UplJOYk9yhcusply"
            name: User
            username: user
            image: ""
            role: member
            createdAt: "2022-12-05T16:32:34.011Z"
            updatedAt: "2022-12-05T16:32:34.011Z"
    

        